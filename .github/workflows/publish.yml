name: NPM publish CD workflow

on:
  release:
    types:
      - published

jobs:
  publish:
    # Run on latest version of ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: echo ${{ github.event.release.target_commitish }}
      - run: yarn
#      - run: yarn build
      - run: yarn publish --access=public ${{ github.event.release.prerelease && '--tag=next' || '--tag=latest' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


#      # Checkout to target branch
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          persist-credentials: false
#          # "ref" specifies the branch to check out.
#          # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
#          ref: ${{ github.event.release.target_commitish }}
#
#      # Install Node.js
#      - name: Use Node.js 15
#        uses: actions/setup-node@v1
#        with:
#          node-version: 15
#          registry-url: https://registry.npmjs.org/
#
#      - name: Prepare package
#        run: yarn install --frozen-lockfile
#
#      - name: Publish release
#        #if: ${{ github.event.inputs.distTag == 'latest' || github.event.inputs.distTag == 'next' }}
#        run: yarn publish --access=public ${{ github.event.release.prerelease && '--tag=next' || '' }}
##        run: yarn publish --access=public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#      # set up git since we will later push to the repo
#      - run: git config --global user.name "GitHub CD bot"
#      - run: git config --global user.email "github-cd-bot@example.com"
#
#      # upgrade npm version in package.json according to release tag
#      - run: yarn version --new-version ${{ github.event.release.tag_name }}
#
#      # publish to NPM
#      - run: yarn publish --access=public ${{ github.event.release.prerelease && '--tag=next' || '--tag=latest' }}
#        env:
#          # Use a token to publish to NPM. See below for how to set it up
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#      # push the version changes to GitHub
#      - run: git push && git push --tags
#        env:
#          # The secret is passed automatically. Nothing to configure.
#          github-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1
      - name: Send a message
        uses: codex-team/action-codexbot-notify@v1
        with:
          webhook: ${{ secrets.CODEX_BOT_CHAT }}
          message: 'ðŸ“¦ [${{ steps.package.outputs.name }}](${{ steps.package.outputs.npmjs-link }}) ${{ steps.package.outputs.version }} was published'
          parse_mode: 'markdown'
          disable_web_page_preview: true
