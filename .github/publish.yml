name: NPM publish CD workflow

on:
  push:
    branches:
      - 'next'
      - 'master'

#  release:
#    # This specifies that the build will be triggered when we publish a release
#    types: [published]

jobs:
  publish:
    # Run on latest version of ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
#          # "ref" specifies the branch to check out.
#          # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
#          ref: ${{ github.event.release.target_commitish }}

      # install Node.js
      - name: Use Node.js 15
        uses: actions/setup-node@v1
        with:
          node-version: 15
          # Specifies the registry, this field is required!
#          registry-url: https://registry.npmjs.org/

      # set up git since we will later push to the repo
#      - name: Prepare git settings
#        run: |
#          git config --global user.name "GitHub CD bot"
#          git config --global user.email "github-cd-bot@example.com"

      - name: Prepare package
        run: yarn install --frozen-lockfile

      - name: Release
        #if: ${{ github.event.inputs.distTag == 'latest' || github.event.inputs.distTag == 'next' }}
        run: |
          yarn release
#          yarn publish --access=public ${{ github.event.release.prerelease && '--tag=next' || '' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      # set up git since we will later push to the repo
#      - run: git config --global user.name "GitHub CD bot"
#      - run: git config --global user.email "github-cd-bot@example.com"
#
#      # upgrade npm version in package.json according to release tag
#      - run: yarn version --new-version ${{ github.event.release.tag_name }}
#
#      # publish to NPM
#      - run: yarn publish --access=public ${{ github.event.release.prerelease && '--tag=next' || '' }}
#        env:
#          # Use a token to publish to NPM. See below for how to set it up
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#      # push the version changes to GitHub
#      - run: git push && git push --tags
#        env:
#          # The secret is passed automatically. Nothing to configure.
#          github-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ::set-env name=EMOJI_PACKAGE::$'\xf0\x9f\x93\xa6'
      - run: echo ::set-env name=PACKAGE_NAME::$(node -p "require('./package.json').name")
      - run: echo ::set-env name=PACKAGE_VERSION::${{ github.event.release.tag_name }}
      - run: echo ::set-env name=MESSAGE::"$EMOJI_PACKAGE [$PACKAGE_NAME](https://npmjs.com/package/$PACKAGE_NAME) $PACKAGE_VERSION was published"
      - run: curl -X POST ${{ secrets.CODEX_BOT_CHAT }} -d "message=$MESSAGE" -d "parse_mode=Markdown" -d "disable_web_page_preview=true"